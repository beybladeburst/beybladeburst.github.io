<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 150 150'>
    <script>// <![CDATA[
    const q = window.location.search.substring(1).split('&').map(q => q.split('=')).reduce((obj, [p, v]) => ({...obj, [p]: v || ''}), {});
    const Q = el => document.querySelector(el);
    const add = (html, where) => where.insertAdjacentHTML('beforeend', html);
    const root = document.querySelector(':root');
    root.style.setProperty('--c', q.hue);
    root.style.setProperty('--base-b', (q.day != null ? 65 : q.hue == 230 ? 5 : 0) + '%');

    const stats = ['att', 'def', 'sta', 'wei', 'mec', 'bur'];
    const types = ['att', 'def', 'sta', 'bal', 'unk'];
    const [start, bot] = [30.5, 35];
    const [lineStroke, imgBorder, descBorder] = [1.5, q.day != null ? 1.2 : 1, .8];
    const line = start + lineStroke / 2;
    const img = (150 - bot + start + lineStroke) / 2 - 70 / 2;
    const desc = img - imgBorder / 2 + descBorder / 2;
    const step5 = (img + 70 + imgBorder / 2 - descBorder / 2 - 12 - desc) / 4;
    const step6 = step5 * 4 / 5;
    // ]]></script>
    <style>
        :root {--s:60%;}
        .att {--c:200;} .def {--c:130;} .sta {--c:60;} .bal {--c:350;}
        .mec {--c:280;} .bur {--c:30;}
        .unk,.wei {--c:0;--s:0%;}

        [id|=img] stop[offset='100%'] {--adj-b:calc(var(--b) - 40%);}
        [id|=img] stop[offset='0%']   {--adj-b:calc(var(--b) - 15%);}
        [id|=dd] stop[offset='100%']  {--adj-b:calc(var(--b) - 30%);}
        stop:not([stop-color])      {stop-color:hsl(var(--c),var(--s),var(--adj-b));}
        [id|=dd] stop[offset='0%']  {stop-color:hsl(0,0%,var(--b));}

        marker {
            overflow:visible; }
        g[id|=dl] use {
            stroke-width:.8; }

        polygon {
            stroke-width:1;stroke:#666; }
        #top+line {
            stroke-linecap:round; }
        defs~g rect {
            width:70px;height:70px; }
        defs~g:not(:target),#dl-5 use:last-child {
            display:none; }
        #top,polygon,#bot {
            filter:url(#shadow); }
    </style>
    <style class='day'>
        :root {
            --b:100%;
            background:hsl(0,0%,90%);
        }
        g[id|=dl] use {stroke:hsl(var(--c),var(--s),calc(var(--b) - 70%));}
        defs~g rect   {stroke:hsl(var(--c),var(--s),40%);}
        #top+line     {stroke:hsl(var(--c),70%,50%);}
        .dd line,.dd path:first-of-type {
            stroke:grey;fill:none; }
        .dd line {
            marker-start:url(#cc); }
        defs~g rect,g[id|=dl] {
            filter:url(#shadow); }
    </style>
    <script>// <![CDATA[
        if (q.heavy != null && q.heavy != 'light')
            add('.wei {--b:70% !important;}', document.querySelector('style.day'));
    // ]]></script>
    <style class='night'>
        :root {
            --b:60%;
            background:hsl(var(--c),30%,calc(10% + var(--base-b)));
        }
        .wei,.unk {--b:90% !important;}
        #sym-art  {--b:90%;}
        g[id|=dl] use {
            stroke:hsl(var(--c),var(--s),var(--b)); }
        defs~g rect {
            stroke:hsl(var(--c),var(--s),var(--b));
            fill:hsla(var(--c),var(--s),var(--b),.05); }
        #circles circle:nth-of-type(2) {
            stroke-width:1.2; }
        .dd {
            fill:none; }
        .accent {
            fill:hsla(0,0%,var(--b),.2); }
        #top+line {
            stroke:url(#line-art); }
        #top+line,defs~g rect,g[id|=dl] use {
            filter:url(#glow); }
    </style>
    <defs>
        <radialGradient id='sym-art' cy='95%' fr='50%' r='100%'>
            <stop offset='0%' stop-color='hsl(0,0%,var(--b))'/>
            <stop offset='100%' stop-color='hsl(0,0%,calc(var(--b) - 30%))'/>
        </radialGradient>

        <pattern id='top-art' width='150' height='1' patternTransform='scale(1.42857) skewX(45) translate(-25)' patternUnits='userSpaceOnUse'>
            <script>// <![CDATA[
            [s, place] = [15, Q('#top-art')];
            for (let i = 1; i <= 10; i++)
                add(`<line x1='${(i-1/2)*s}' x2='${(i-1/2)*s}' y2='1' stroke-width='${s}' stroke='hsl(var(--c),var(--s),calc(${i%2===0? 10+i : 16.8+1.2*i }% + var(--base-b)))'/>`, place);
            // ]]></script>
        </pattern>
        <linearGradient id='bot-art'>
            <stop offset='0%' stop-color='hsl(var(--c),var(--s),calc(15% + var(--base-b)))'/>
            <stop offset='100%' stop-color='hsl(var(--c),var(--s),calc(25% + var(--base-b)))'/>
        </linearGradient>

        <g class='night'>
            <linearGradient id='line-art' gradientUnits='userSpaceOnUse'>
                <stop offset='0%' stop-color='hsla(var(--c),70%,calc(50% + var(--base-b)),.1)'/>
                <stop offset='40%' stop-color='hsl(var(--c),70%,calc(50% + var(--base-b)))'/>
                <stop offset='60%' stop-color='hsl(var(--c),70%,calc(50% + var(--base-b)))'/>
                <stop offset='90%' stop-color='hsl(var(--c),70%,calc(60% + var(--base-b)))'/>
            </linearGradient>
        </g>

        <g class='day'>
            <script>// <![CDATA[
            place = Q('g.day');
            for (const t of types) add(`
            <linearGradient id='img-${t}' class='${t}' x1='0' y1='100%' x2='100%' y2='0'>
                <stop offset='0%'/><stop offset='100%'/>
            </linearGradient>`, place);

            for (const s of stats) add(`
            <linearGradient id='dd-${s}-5' class='${s}' x1='0%' y1='100%' x2='0%' y2='0%'>
                <stop offset='0%'/><stop offset='100%'/>
            </linearGradient>
            <radialGradient id='dd-${s}-6' class='${s}' fx='30%' fy='70%'>
                <stop offset='0%'/><stop offset='100%'/>
            </radialGradient>`, place);
            // ]]></script>
        </g>

        <g class='dl-5 day'>
            <g class='dd' id='dd'>
                <path data-parse='[d]M 123.2,{desc} h -36.8 l -6,6 l 6,6 h 36.8'/>
                <path data-parse='[d]M 123.2,{desc} l -6,6 l 6,6 h 15.6 a 6,6,0,0,0,0,-12 Z'/>
            </g>
            <g class='dd' id='grams-5'>
                <path data-parse='[d]M 115.2,{desc} h -28.8 l -6,6 l 6,6 h 28.8'/>
                <path data-parse='[d]M 115.2,{desc} l -6,6 l 6,6 h 23.6 a 6,6,0,0,0,0,-12 Z'/>
            </g>
            <g class='dd' id='fusion-5'>
                <path data-parse='[d]M 123.2,{desc} h -36.8 l -6,6 l 6,6 h 36.8'/>
                <path data-parse='[d]M 123.2,{desc} l -6,6 l 6,6 h 19.6 a 1.5,1.5,0,0,0,1.5,-1.5 v -9 a 1.5,1.5,0,0,0,-1.5,-1.5 Z'/>
            </g>
            <use id='heavy-5' href='#dd'/>
        </g>

        <g class='dl-5 night'>
            <g id='circles-5'>
                <circle r='2.5' cx='84' data-parse='[cy]{desc+6}'/>
                <circle r='0.6' cx='84' data-parse='[cy]{desc+6}'/>
            </g>
            <g class='dd' id='dd'>
                <use href='#circles-5'/>
                <path data-parse='[d]M 86,{desc+8} l 4,4 h 49 a 6,6,0,0,0,0,-12 h -14 l -6,6 l 6,6'/>
            </g>
            <g class='dd' id='heavy-5'>
                <use href='#circles-5'/>
                <path data-parse='[d]M 125,{desc+12} h 14 a 6,6,0,0,0,0,-12 h -14 l -6,6 l 6,6 Z' class='accent'/>
                <path data-parse='[d]M 86,{desc+8} l 4,4 h 49 a 6,6,0,0,0,0,-12 h -14 l -6,6 l 6,6'/>
            </g>
            <g class='dd' id='grams-5'>
                <use href='#circles-5'/>
                <path data-parse='[d]M 117,{desc+12} h 22 a 6,6,0,0,0,0,-12 h -22 l -6,6 l 6,6 Z' class='accent'/>
                <path data-parse='[d]M 86,{desc+8} l 4,4 h 49 a 6,6,0,0,0,0,-12 h -22 l -6,6 l 6,6'/>
            </g>
            <g class='dd' id='fusion-5'>
                <use href='#circles-5'/>
                <path data-parse='[d]M 117,{desc+12} h 26 a 1.5,1.5,0,0,0,1.5,-1.5 v -9 a 1.5,1.5,0,0,0,-1.5,-1.5 h -18 l -6,6 l 6,6 Z' class='accent'/>
                <path data-parse='[d]M 86,{desc+8} l 4,4 h 53 a 1.5,1.5,0,0,0,1.5,-1.5 v -9 a 1.5,1.5,0,0,0,-1.5,-1.5 h -18 l -6,6 l 6,6'/>
            </g>
        </g>

        <g class='dl-6'>
            <circle r='6' cx='139' data-parse='[cy]{desc+6}' id='odd-circle'/>
            <circle r='6' cx='127' data-parse='[cy]{desc+6}' id='even-circle'/>
            <g class='day'>
                <marker id='cc'>
                    <circle r='1.5' fill='grey'/>
                </marker>
                <g class='dd' id='odd'>
                    <line x2='133' data-parse='[y2]{desc+6}' x1='111' data-parse1='[y1]{desc+6}'/>
                    <use href='#odd-circle'/>
                </g>
                <g class='dd' id='even'>
                    <line x2='121' data-parse='[y2]{desc+6}' x1='111' data-parse1='[y1]{desc+6}'/>
                    <use href='#even-circle'/>
                </g>
                <g class='dd' id='grams-6'>
                    <line x2='121' data-parse='[y2]{desc+6}' x1='111' data-parse1='[y1]{desc+6}'/>
                    <rect width='12' height='12' x='121' data-parse='[y]{desc}' rx='1.5' ry='1.5'/>
                </g>
                <use id='heavy-6' href='#even'/>
                <use id='fusion-6' href='#grams-6'/>
                <use id='light-6' href='#grams-6'/>
            </g>
            <g class='night'>
                <g id='circles-6'>
                    <circle r='2.5' cx='111' data-parse='[cy]{desc+6}'/>
                    <circle r='0.6' cx='111' data-parse='[cy]{desc+6}'/>
                </g>
                <g class='dd' id='odd'>
                    <use href='#circles-6'/>
                    <line x2='133' data-parse='[y2]{desc+6}' x1='114' data-parse1='[y1]{desc+6}'/>
                    <use href='#odd-circle'/>
                </g>
                <g class='dd' id='even'>
                    <use href='#circles-6'/>
                    <line x2='121' data-parse='[y2]{desc+6}' x1='114' data-parse1='[y1]{desc+6}'/>
                    <use href='#even-circle'/>
                </g>
                <g class='dd' id='heavy-6'>
                    <use href='#even'/>
                    <circle r='6' cx='127' data-parse='[cy]{desc+6}' class='accent'/>
                </g>
                <g class='dd' id='light-6'>
                    <use href='#circles-6'/>
                    <line x2='121' data-parse='[y2]{desc+6}' x1='114' data-parse1='[y1]{desc+6}'/>
                    <rect width='12' height='12' x='121' data-parse='[y]{desc}' rx='1.5' ry='1.5'/>
                </g>
                <g class='dd' id='fusion-6'>
                    <use href='#light-6'/>
                    <rect width='12' height='12' x='121' data-parse='[y]{desc}' rx='1.5' ry='1.5' class='accent'/>
                </g>
                <use id='grams-6' href='#fusion-6' />
            </g>
        </g>

        <g id='dl-5'>
            <script>// <![CDATA[
            place = Q('#dl-5');
            stats.forEach((s, i) => {
                const g = s == 'wei' && q.heavy != null ? (q.heavy || 'heavy')+'-5' : 'dd';
                add(`<use href='#${g}' class='${s}' transform='translate(0,${step5*i})' fill='url(#dd-${s}-5)' />`, place);
            });
            // ]]></script>
        </g>
        <g id='dl-6'>
            <script>// <![CDATA[
            place = Q('#dl-6');
            stats.forEach((s, i) => {
                const g = s == 'wei' && q.heavy != null ? (q.heavy || 'heavy')+'-6' : i%2 == 0 ? 'odd' : 'even';
                add(`<use href='#${g}' class='${s}' transform='translate(0,${step6*i})' fill='url(#dd-${s}-6)' />`, place);
            });
            // ]]></script>
        </g>

        <filter id='glow' y='-10' x='-10' filterUnits='userSpaceOnUse'>
            <feOffset in='SourceGraphic' dx='0' dy='0' result='offset'/>
            <feGaussianBlur in='offset' stdDeviation='0.2' result='blur1'/>
            <feGaussianBlur in='offset' stdDeviation='0.5' result='blur2'/>
            <feGaussianBlur in='offset' stdDeviation='1.5' result='blur3'/>
            <feMerge>
                <feMergeNode in='blur1'/>
                <feMergeNode in='blur2'/>
                <feMergeNode in='blur3'/>
                <feMergeNode in='SourceGraphic'/>
            </feMerge>
        </filter>

        <filter id='shadow' width='30' height='30' y='-50%'>
            <feDropShadow data-parse='[dx]{q.day != null ? 1:0}' data-parse1='[dy]{q.day != null ? -1:0}' stdDeviation='.5' flood-color='black' data-parse2='[flood-opacity]{q.day != null ? .15:.8}'/>
        </filter>
    </defs>

    <rect id='top' width='100%' data-parse='[height]{start}' fill='url(#top-art)'/>
    <line data-parse='[y1]{line}' data-parse1='[y2]{line}' x2='99.4%' data-parse2='[stroke-width]{lineStroke}'/>
    <polygon points='3,-1 3,26 15,35 27,26 27,-1' fill='url(#sym-art)'/>
    <rect id='bot' width='100%' data-parse='[height]{bot}' data-parse1='[y]{150-bot}' fill='url(#bot-art)'/>
    <path data-parse='[d]M 17.5,{150-bot} h -17.5 v 17.5 Z' fill='hsl(var(--c),var(--s),calc(25% + var(--base-b)))'/>
    <path d='M 132.5,150 h 17.5 v -17.5 Z' fill='hsl(var(--c),var(--s),calc(15% + var(--base-b)))'/>
    <script>// <![CDATA[
    place = document.querySelector('polygon');
    for (const t of types) place.insertAdjacentHTML('afterend', `
        <g id='${t}5'>
            <use href='#dl-5'/>
            <rect class='${t}' x='5.5' y='${img}' rx='5' fill='url(#img-${t})' stroke-width='${imgBorder}' />
        </g>
        <g id='${t}6'>
            <use href='#dl-6'/>
            <rect class='${t}' x='5.5' y='${img}' rx='5' fill='url(#img-${t})' stroke-width='${imgBorder}' />
        </g>`)

    for (const u of document.querySelectorAll('g[id|=dl] use')) u.strokeWidth = descBorder;
    for (const g of document.querySelectorAll(`.${q.day != null ? 'night' : 'day'}`)) g.remove();

    let i = 0;
    while ((els = document.querySelectorAll(`[data-parse${i || ''}]`)).length > 0) {
        for (const el of els) {
            const [, attr, value] = el.getAttribute(`data-parse${i || ''}`).match(/^\[(.+)\](.+?)$/);
            el.setAttribute(attr, value.replace(/\{(.+)\}/, (whole, f) => Function('return ' + f)() ));
        };
        i++;
    }
    // ]]></script>
</svg>